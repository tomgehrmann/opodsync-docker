name: Manual Build and Push

on:
  workflow_dispatch: 

env:
  REPO_OWNER: kd2org
  REPO_NAME: opodsync
  CONTAINER_REGISTRY: ghcr.io
  IMAGE_URI: ghcr.io/${{ github.repository_owner }}/opodsync

jobs:
  build-push:
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      packages: write

    steps:
      - name: Get latest program version
        id: get_latest_program_tag
        uses: lhstrh/action-repo-semver@v1.2.1
        with:
          repo: ${{ env.REPO_OWNER }}/${{ env.REPO_NAME }}

      # Build
      - name: Checkout ${{ env.REPO_NAME }}
        uses: actions/checkout@v4
        with:
          repository: ${{ env.REPO_OWNER }}/${{ env.REPO_NAME }}
          ref: ${{ steps.get_latest_program_tag.outputs.tag }}
      - name: Checkout ${{ github.repository }}
        uses: actions/checkout@v4
        with:
          repository: ${{ github.repository }}
          path: docker

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.CONTAINER_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Get Metadata from Repo
        id: get_repo_metadata
        uses: docker/metadata-action@v5
        with:
          annotations: |
            org.opencontainers.image.title=oPodSync
            org.opencontainers.image.description=oPodSync is a minimalist GPodder-compatible podcast synchronization server
            org.opencontainers.image.source=https://github.com/${{ env.REPO_OWNER }}/${{ env.REPO_NAME}}
            org.opencontainers.image.version=${{ steps.get_latest_program_tag.outputs.tag }}
          images: ${{ env.IMAGE_URI }}
          tags: type=semver,pattern={{raw}},value=${{ steps.get_latest_program_tag.outputs.tag }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          platforms: linux/amd64,linux/arm64
          context: .
          file: docker/Dockerfile
          push: true
          annotations: ${{ steps.get_repo_metadata.outputs.annotations }}
          tags: ${{ steps.get_repo_metadata.outputs.tags }}
